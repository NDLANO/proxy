user  nginx;
worker_processes 2;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  2048;
}

http {
    gzip on;
    gzip_vary off;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript application/octet-stream text/xml application/xml application/xml+rss text/javascript;

    # include cache definitions used in the server blocks below
    include 'nginx-caches.conf';

    # Changes based on whether running on kubernetes or plain docker
    include '/nginx-resolver.conf';

    # Prevents internal IP addresses from leaking when providing an empty host header and http1.0.
    # Requests where the host header does not match any server_name will be closed (nginx closes the connection when returning 444)
    server {
        listen 79 default_server;
        listen 80 default_server;
        server_name "";

        location /health {
            return 200;
        }

        location / {
            return 444;
        }
    }

    # ↓↓↓ TEMPORARY REDIRECTS FOR FF -> PROD ↓↓↓
    server {
        listen 80;
        server_name ff.ndla.no
                    www.ff.ndla.no;

        return 302 https://ndla.no$request_uri;
    }

    server {
        listen 80;
        server_name stier.ff.ndla.no;
        return 302 https://stier.ndla.no$request_uri;
    }
    
    server {
        listen 80;
        server_name liste.ff.ndla.no;
        return 302 https://liste.ndla.no$request_uri;
    }
    # ↑↑↑ TEMPORARY REDIRECTS FOR FF -> PROD ↑↑↑

    server {
        listen 80;
        charset UTF-8;

        server_name ndla.no
                    ~^NDLA_ENVIRONMENT.ndla.no$
                    ~^www.(.+\.)?ndla.no$
                    ~^ndla-frontend.(.+\.)?ndla.no$
                    ~^localhost$;

        if ($host = www.ndla.no) {
            return 301 https://ndla.no$request_uri;
        }

        add_header X-Cache-Status $upstream_cache_status;
        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;

        include '/ndla-frontend-hostname.conf';
        include '/api-gateway-hostname.conf';

        proxy_buffer_size          256k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        location ~* ^/(sitemap.*) {
            set $s3_bucket      'NDLA_ENVIRONMENT.sitemap.ndla.s3.amazonaws.com';
            set $sitemap_url    'https://$s3_bucket/$1?';

            proxy_cache shared_frontend_cache;

            proxy_set_header       Referer  'ndla_proxy';
            proxy_pass             $sitemap_url;
        }

        location ~* ^/(forlarere) {
            proxy_pass             'http://statisk.ndla.no/$1/';
        }

        location ~ /about/(.*)/rss.xml {
            proxy_set_header    Host   'api-gateway';
            proxy_pass 'http://$api_gateway/article-api/v2/articles/$1/rss.xml';
        }


        location /minndla { include 'nginx-cacheless.conf'; }
        location ~ /[a-z]+/minndla { include 'nginx-cacheless.conf'; }
        location /login { include 'nginx-cacheless.conf'; }
        location ~ /[a-z]+/login { include 'nginx-cacheless.conf'; }
        location /logout { include 'nginx-cacheless.conf'; }
        location ~ /[a-z]+/logout { include 'nginx-cacheless.conf'; }

        location / {
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Host $http_host;
            proxy_set_header  Forwarded "for=$remote_addr;proto=$http_x_forwarded_proto";

            proxy_cache_valid 200 302 301  3m;
            proxy_cache_valid 404         30s;

            proxy_cache shared_frontend_cache;
            proxy_cache_key "$proxy_host$uri$is_args$args";
            proxy_cache_lock on;
            proxy_cache_use_stale error invalid_header timeout updating;
            proxy_cache_bypass  $http_cache_control;

            proxy_pass http://$frontend;
        }
    }

    server {
        listen 80;
        charset UTF-8;

        server_name stier.ndla.no
                    ~^stier.(.+\.)?ndla.no$
                    ~^learningpath-frontend.(.+\.)?ndla.no$;

        add_header X-Cache-Status $upstream_cache_status;
        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;

        include '/learningpath-frontend-hostname.conf';

        proxy_buffer_size          256k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        location /minside { include 'nginx-cacheless.conf'; }
        location ~ ^/lti/[0-9a-zA-Z]+/step/[0-9a-zA-Z]+$ { include 'nginx-cacheless.conf'; }
        location ~ ^/lti/[0-9a-zA-Z]+/step/new$ { include 'nginx-cacheless.conf'; }
        location ~ ^/learningpaths/[0-9a-zA-Z]+/edit$ { include 'nginx-cacheless.conf'; }
        location ~ ^/learningpaths/[0-9a-zA-Z]+/step/[0-9a-zA-Z]+/edit$ { include 'nginx-cacheless.conf'; }
        location ~ ^/learningpaths/[0-9a-zA-Z]+/step/new$ { include 'nginx-cacheless.conf'; }
        location ~ ^/learningpaths/[0-9a-zA-Z]+/step/sort$ { include 'nginx-cacheless.conf'; }
        location ~ ^/learningpaths/new$ { include 'nginx-cacheless.conf'; }
        location /pinterest-proxy/ { include 'nginx-cacheless.conf'; }
        location /login/silent-callback {include 'nginx-cacheless.conf'; }
        location /get_token { include 'nginx-cacheless.conf'; }

        location / {
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Host $http_host;
            proxy_set_header  Forwarded "for=$remote_addr;proto=$http_x_forwarded_proto";

            proxy_cache_valid 200 302 301  3m;
            proxy_cache_valid 404         30s;

            proxy_cache shared_frontend_cache;
            proxy_cache_key "$proxy_host$uri$is_args$args";
            proxy_cache_lock on;
            proxy_cache_use_stale error invalid_header timeout updating;
            proxy_cache_bypass  $http_cache_control;

            proxy_pass http://$frontend;
        }

    }

    server {
        listen 80;
        charset UTF-8;

        server_name liste.ndla.no
                    ~^listing-frontend.(.+\.)?ndla.no$
                    ~^liste.(.+\.)?ndla.no$;

        add_header X-Cache-Status $upstream_cache_status;
        error_log /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log;

        include '/listing-frontend-hostname.conf';

        proxy_buffer_size          256k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;

        location / {
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Host $http_host;
            proxy_set_header  Forwarded "for=$remote_addr;proto=$http_x_forwarded_proto";

            proxy_cache_valid 200 302 301  3m;
            proxy_cache_valid 404         30s;

            proxy_cache shared_frontend_cache;
            proxy_cache_key "$proxy_host$uri$is_args$args";
            proxy_cache_lock on;
            proxy_cache_use_stale error invalid_header timeout updating;
            proxy_cache_bypass  $http_cache_control;

            proxy_pass http://$frontend;
        }

    }
}
